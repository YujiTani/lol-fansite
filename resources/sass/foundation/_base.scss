// ==============================
// 変数
// ==============================

$font-color__default: #333;
$font-color__secondary: #f6f5f4;
$font-color__hover: #f6f5f4;
$font-color-link__hover: #b9ae6a;
$font-color__footer: $font-color__hover;

$base-color__default: #121212;
$base-color__primary: #f6f5f4;
$base-color__secondary: #333;

$sub-color: #e6e6e6;
$banner-color: #FFEB3B;

$font-size_root: 10px;
$font-size__s: 12px;
$font-size__default: 14px;
$font-size__l: 16px;
$font-size__xl: 20px;
$font-size__xxl: 45px;

$space__s: 5px;
$space__m: 10px;
$space__l: 15px;
$space__xl: 20px;
$space__xxl: 30px;
$space__3l: 40px;
$space__4l: 50px;

$font-family__default: 'Open Sans Condensed', sans-serif;

$content-width__default: 980px;
$content-width__l: 1280px;


// マップ型変数を使うと便利
$breakpoints: (
  'sm': 'screen and (max-width: 414px)',
  'md': 'screen and (max-width: 768px)',
  'lg': 'screen and (max-width: 1000px)',
  'xl': 'screen and (max-width: 1200px)',
) !default;

// ==============================
// mixin
// ==============================
// map-get()の第一引数に変数名、第二引数にマップ型のキーを渡すと、マップ型の値が返る
// #{}は「インターポーレーション」といって、演算できない箇所、変数使えない箇所でも使えるようにするものcalcなどでよく使う
// http://book.scss.jp/code/c4/08.html
@mixin mq($breakpoint: sm) {
  @media #{map-get($breakpoints, $breakpoint)} {
    @content;
  }
}

// ==============================
// base
// ==============================
html, body{
  width: 100%;
  color: $font-color__default;
  font-size: $font-size__default;
  line-height: 1.6;
  font-family: Quicksand, 游ゴシック体, "Yu Gothic", YuGothic, "ヒラギノ角ゴシック Pro", "Hiragino Kaku Gothic Pro", メイリオ, Meiryo, Osaka, "ＭＳ Ｐゴシック", "MS PGothic", sans-serif $font-family__default; // TODO:リファクタ必要
  text-size-adjust: 100%;
  letter-spacing: .1em;
  font-size: $font-size_root;
}

p, a {
    -webkit-font-smoothing: antialiased;
  }

a {
  color: $font-color__default;
  text-decoration: none;
  transition: .3s;
}

a:hover {
    color: $font-color-link__hover;
    transition: .3s;
}

ul, li {
  list-style: none;
}


img {
  vertical-align: bottom;
  // width: 50%;
}

// ==============================
// mixin
// ==============================
// @mixinは関数のようなものを作れる
// ----------------------------------------------------------
// 09__疑似要素初期化
@mixin icon-ini {
  content: '';
  display: inline-block;
}
// ----------------------------------------------------------
//position用
// ----------------------------------------------------------
@mixin absPosition ($top: auto, $right: auto, $bottom: auto, $left: auto) {
  position: absolute;
  bottom: $bottom;
  left: $left;
  right: $right;
  top: $top;
}

// -----------------------------------------------------------------------------
// 07__くの字矢印 ※ 左から大きさ、太さ、色、方向 use include arrow(10, 2, #000, right)
// -----------------------------------------------------------------------------
@mixin arrow($width, $bold, $color, $deg) {
  @include icon-ini;

  border-color: $color;
  border-style: solid;
  border-width: 0 #{$bold}px #{$bold}px 0;
  height: #{$width}px;
  vertical-align: middle;
  width: #{$width}px;
  //角度
  @if ($deg == 'left') {
      transform: rotate(135deg);
  }

@else if ($deg == 'top') {
      transform: rotate(225deg);
  }

@else if ($deg == 'right') {
      transform: rotate(-45deg);
  }

@else if ($deg == 'bottom') {
      transform: rotate(45deg);
  }

  @include ie11only() {
      margin-bottom: 1px !important;
  }
}
// -----------------------------------------------------------------------------
// 17__first, notfirst  ※include first{ // ここに記述 }といった
// include first()   ：一番最初
// include notfirst()：一番最初以外
// include last()    ：一番最後
// include notlast() ：一番最後以外
// -----------------------------------------------------------------------------
@mixin first {
  &:first-of-type {
      @content;
  }
}

@mixin notfirst {
  &:not(:first-of-type) {
      @content;
  }
}

// 18__last, notlast
// ----------------------------------------------------------
@mixin last {
  &:last-of-type {
      @content;
  }
}

@mixin notlast {
  &:not(:last-of-type) {
      @content;
  }
}
